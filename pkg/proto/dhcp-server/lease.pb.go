// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.6.1
// source: lease.proto

package dhcp_server

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Lease4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address               string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	HwAddress             string `protobuf:"bytes,2,opt,name=hw_address,json=hwAddress,proto3" json:"hw_address,omitempty"`
	HwAddressOrganization string `protobuf:"bytes,3,opt,name=hw_address_organization,json=hwAddressOrganization,proto3" json:"hw_address_organization,omitempty"`
	ClientId              string `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	FqdnFwd               bool   `protobuf:"varint,5,opt,name=fqdn_fwd,json=fqdnFwd,proto3" json:"fqdn_fwd,omitempty"`
	FqdnRev               bool   `protobuf:"varint,6,opt,name=fqdn_rev,json=fqdnRev,proto3" json:"fqdn_rev,omitempty"`
	Hostname              string `protobuf:"bytes,7,opt,name=hostname,proto3" json:"hostname,omitempty"`
	SubnetId              uint64 `protobuf:"varint,8,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	Subnet                string `protobuf:"bytes,9,opt,name=subnet,proto3" json:"subnet,omitempty"`
	LeaseState            uint32 `protobuf:"varint,10,opt,name=lease_state,json=leaseState,proto3" json:"lease_state,omitempty"`
	RequestType           string `protobuf:"bytes,11,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
	RequestTime           string `protobuf:"bytes,12,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	ValidLifetime         uint32 `protobuf:"varint,13,opt,name=valid_lifetime,json=validLifetime,proto3" json:"valid_lifetime,omitempty"`
	ExpirationTime        string `protobuf:"bytes,14,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	Fingerprint           string `protobuf:"bytes,15,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	VendorId              string `protobuf:"bytes,16,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	OperatingSystem       string `protobuf:"bytes,17,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
	ClientType            string `protobuf:"bytes,18,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`
	AllocateMode          uint32 `protobuf:"varint,19,opt,name=allocate_mode,json=allocateMode,proto3" json:"allocate_mode,omitempty"`
}

func (x *Lease4) Reset() {
	*x = Lease4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lease_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lease4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lease4) ProtoMessage() {}

func (x *Lease4) ProtoReflect() protoreflect.Message {
	mi := &file_lease_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lease4.ProtoReflect.Descriptor instead.
func (*Lease4) Descriptor() ([]byte, []int) {
	return file_lease_proto_rawDescGZIP(), []int{0}
}

func (x *Lease4) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Lease4) GetHwAddress() string {
	if x != nil {
		return x.HwAddress
	}
	return ""
}

func (x *Lease4) GetHwAddressOrganization() string {
	if x != nil {
		return x.HwAddressOrganization
	}
	return ""
}

func (x *Lease4) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Lease4) GetFqdnFwd() bool {
	if x != nil {
		return x.FqdnFwd
	}
	return false
}

func (x *Lease4) GetFqdnRev() bool {
	if x != nil {
		return x.FqdnRev
	}
	return false
}

func (x *Lease4) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Lease4) GetSubnetId() uint64 {
	if x != nil {
		return x.SubnetId
	}
	return 0
}

func (x *Lease4) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

func (x *Lease4) GetLeaseState() uint32 {
	if x != nil {
		return x.LeaseState
	}
	return 0
}

func (x *Lease4) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (x *Lease4) GetRequestTime() string {
	if x != nil {
		return x.RequestTime
	}
	return ""
}

func (x *Lease4) GetValidLifetime() uint32 {
	if x != nil {
		return x.ValidLifetime
	}
	return 0
}

func (x *Lease4) GetExpirationTime() string {
	if x != nil {
		return x.ExpirationTime
	}
	return ""
}

func (x *Lease4) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *Lease4) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *Lease4) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *Lease4) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *Lease4) GetAllocateMode() uint32 {
	if x != nil {
		return x.AllocateMode
	}
	return 0
}

type Lease6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address               string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Duid                  string   `protobuf:"bytes,2,opt,name=duid,proto3" json:"duid,omitempty"`
	HwAddress             string   `protobuf:"bytes,3,opt,name=hw_address,json=hwAddress,proto3" json:"hw_address,omitempty"`
	HwAddressType         string   `protobuf:"bytes,4,opt,name=hw_address_type,json=hwAddressType,proto3" json:"hw_address_type,omitempty"`
	HwAddressSource       string   `protobuf:"bytes,5,opt,name=hw_address_source,json=hwAddressSource,proto3" json:"hw_address_source,omitempty"`
	HwAddressOrganization string   `protobuf:"bytes,6,opt,name=hw_address_organization,json=hwAddressOrganization,proto3" json:"hw_address_organization,omitempty"`
	FqdnFwd               bool     `protobuf:"varint,7,opt,name=fqdn_fwd,json=fqdnFwd,proto3" json:"fqdn_fwd,omitempty"`
	FqdnRev               bool     `protobuf:"varint,8,opt,name=fqdn_rev,json=fqdnRev,proto3" json:"fqdn_rev,omitempty"`
	Hostname              string   `protobuf:"bytes,9,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Iaid                  uint32   `protobuf:"varint,10,opt,name=iaid,proto3" json:"iaid,omitempty"`
	SubnetId              uint64   `protobuf:"varint,11,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	Subnet                string   `protobuf:"bytes,12,opt,name=subnet,proto3" json:"subnet,omitempty"`
	LeaseState            uint32   `protobuf:"varint,13,opt,name=lease_state,json=leaseState,proto3" json:"lease_state,omitempty"`
	LeaseType             string   `protobuf:"bytes,14,opt,name=lease_type,json=leaseType,proto3" json:"lease_type,omitempty"`
	PrefixLen             uint32   `protobuf:"varint,15,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
	RequestType           string   `protobuf:"bytes,16,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
	RequestTime           string   `protobuf:"bytes,17,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	ValidLifetime         uint32   `protobuf:"varint,18,opt,name=valid_lifetime,json=validLifetime,proto3" json:"valid_lifetime,omitempty"`
	PreferredLifetime     uint32   `protobuf:"varint,19,opt,name=preferred_lifetime,json=preferredLifetime,proto3" json:"preferred_lifetime,omitempty"`
	ExpirationTime        string   `protobuf:"bytes,20,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	Fingerprint           string   `protobuf:"bytes,21,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	VendorId              string   `protobuf:"bytes,22,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	OperatingSystem       string   `protobuf:"bytes,23,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
	ClientType            string   `protobuf:"bytes,24,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`
	RequestSourceAddr     string   `protobuf:"bytes,25,opt,name=request_source_addr,json=requestSourceAddr,proto3" json:"request_source_addr,omitempty"`
	AddressCodes          []string `protobuf:"bytes,26,rep,name=address_codes,json=addressCodes,proto3" json:"address_codes,omitempty"`
	AddressCodeBegins     []uint32 `protobuf:"varint,27,rep,packed,name=address_code_begins,json=addressCodeBegins,proto3" json:"address_code_begins,omitempty"`
	AddressCodeEnds       []uint32 `protobuf:"varint,28,rep,packed,name=address_code_ends,json=addressCodeEnds,proto3" json:"address_code_ends,omitempty"`
	AllocateMode          uint32   `protobuf:"varint,29,opt,name=allocate_mode,json=allocateMode,proto3" json:"allocate_mode,omitempty"`
}

func (x *Lease6) Reset() {
	*x = Lease6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lease_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lease6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lease6) ProtoMessage() {}

func (x *Lease6) ProtoReflect() protoreflect.Message {
	mi := &file_lease_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lease6.ProtoReflect.Descriptor instead.
func (*Lease6) Descriptor() ([]byte, []int) {
	return file_lease_proto_rawDescGZIP(), []int{1}
}

func (x *Lease6) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Lease6) GetDuid() string {
	if x != nil {
		return x.Duid
	}
	return ""
}

func (x *Lease6) GetHwAddress() string {
	if x != nil {
		return x.HwAddress
	}
	return ""
}

func (x *Lease6) GetHwAddressType() string {
	if x != nil {
		return x.HwAddressType
	}
	return ""
}

func (x *Lease6) GetHwAddressSource() string {
	if x != nil {
		return x.HwAddressSource
	}
	return ""
}

func (x *Lease6) GetHwAddressOrganization() string {
	if x != nil {
		return x.HwAddressOrganization
	}
	return ""
}

func (x *Lease6) GetFqdnFwd() bool {
	if x != nil {
		return x.FqdnFwd
	}
	return false
}

func (x *Lease6) GetFqdnRev() bool {
	if x != nil {
		return x.FqdnRev
	}
	return false
}

func (x *Lease6) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Lease6) GetIaid() uint32 {
	if x != nil {
		return x.Iaid
	}
	return 0
}

func (x *Lease6) GetSubnetId() uint64 {
	if x != nil {
		return x.SubnetId
	}
	return 0
}

func (x *Lease6) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

func (x *Lease6) GetLeaseState() uint32 {
	if x != nil {
		return x.LeaseState
	}
	return 0
}

func (x *Lease6) GetLeaseType() string {
	if x != nil {
		return x.LeaseType
	}
	return ""
}

func (x *Lease6) GetPrefixLen() uint32 {
	if x != nil {
		return x.PrefixLen
	}
	return 0
}

func (x *Lease6) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

func (x *Lease6) GetRequestTime() string {
	if x != nil {
		return x.RequestTime
	}
	return ""
}

func (x *Lease6) GetValidLifetime() uint32 {
	if x != nil {
		return x.ValidLifetime
	}
	return 0
}

func (x *Lease6) GetPreferredLifetime() uint32 {
	if x != nil {
		return x.PreferredLifetime
	}
	return 0
}

func (x *Lease6) GetExpirationTime() string {
	if x != nil {
		return x.ExpirationTime
	}
	return ""
}

func (x *Lease6) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *Lease6) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *Lease6) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *Lease6) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *Lease6) GetRequestSourceAddr() string {
	if x != nil {
		return x.RequestSourceAddr
	}
	return ""
}

func (x *Lease6) GetAddressCodes() []string {
	if x != nil {
		return x.AddressCodes
	}
	return nil
}

func (x *Lease6) GetAddressCodeBegins() []uint32 {
	if x != nil {
		return x.AddressCodeBegins
	}
	return nil
}

func (x *Lease6) GetAddressCodeEnds() []uint32 {
	if x != nil {
		return x.AddressCodeEnds
	}
	return nil
}

func (x *Lease6) GetAllocateMode() uint32 {
	if x != nil {
		return x.AllocateMode
	}
	return 0
}

var File_lease_proto protoreflect.FileDescriptor

var file_lease_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x05, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x34, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x77, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68,
	0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x68, 0x77, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x68, 0x77, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x71, 0x64, 0x6e, 0x5f, 0x66, 0x77, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x66, 0x71, 0x64, 0x6e, 0x46, 0x77, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x71, 0x64, 0x6e,
	0x5f, 0x72, 0x65, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x71, 0x64, 0x6e,
	0x52, 0x65, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x81, 0x08, 0x0a, 0x06,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x36, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x77, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x77,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x68,
	0x77, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x77, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x68, 0x77, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x68, 0x77, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x71, 0x64, 0x6e, 0x5f, 0x66, 0x77, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x66, 0x71, 0x64, 0x6e, 0x46, 0x77, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x71,
	0x64, 0x6e, 0x5f, 0x72, 0x65, 0x76, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x71,
	0x64, 0x6e, 0x52, 0x65, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x61, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x69, 0x61, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x69,
	0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x66,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x65,
	0x6e, 0x64, 0x73, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_lease_proto_rawDescOnce sync.Once
	file_lease_proto_rawDescData = file_lease_proto_rawDesc
)

func file_lease_proto_rawDescGZIP() []byte {
	file_lease_proto_rawDescOnce.Do(func() {
		file_lease_proto_rawDescData = protoimpl.X.CompressGZIP(file_lease_proto_rawDescData)
	})
	return file_lease_proto_rawDescData
}

var file_lease_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_lease_proto_goTypes = []interface{}{
	(*Lease4)(nil), // 0: proto.Lease4
	(*Lease6)(nil), // 1: proto.Lease6
}
var file_lease_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_lease_proto_init() }
func file_lease_proto_init() {
	if File_lease_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lease_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lease4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lease_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lease6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lease_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lease_proto_goTypes,
		DependencyIndexes: file_lease_proto_depIdxs,
		MessageInfos:      file_lease_proto_msgTypes,
	}.Build()
	File_lease_proto = out.File
	file_lease_proto_rawDesc = nil
	file_lease_proto_goTypes = nil
	file_lease_proto_depIdxs = nil
}
