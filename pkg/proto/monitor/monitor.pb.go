// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.6.1
// source: monitor.proto

package monitor

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HaCommand int32

const (
	HaCommand_start_ha    HaCommand = 0
	HaCommand_master_up   HaCommand = 1
	HaCommand_master_down HaCommand = 2
)

// Enum value maps for HaCommand.
var (
	HaCommand_name = map[int32]string{
		0: "start_ha",
		1: "master_up",
		2: "master_down",
	}
	HaCommand_value = map[string]int32{
		"start_ha":    0,
		"master_up":   1,
		"master_down": 2,
	}
)

func (x HaCommand) Enum() *HaCommand {
	p := new(HaCommand)
	*p = x
	return p
}

func (x HaCommand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HaCommand) Descriptor() protoreflect.EnumDescriptor {
	return file_monitor_proto_enumTypes[0].Descriptor()
}

func (HaCommand) Type() protoreflect.EnumType {
	return &file_monitor_proto_enumTypes[0]
}

func (x HaCommand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HaCommand.Descriptor instead.
func (HaCommand) EnumDescriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{0}
}

type GetDHCPNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDHCPNodesRequest) Reset() {
	*x = GetDHCPNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDHCPNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDHCPNodesRequest) ProtoMessage() {}

func (x *GetDHCPNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDHCPNodesRequest.ProtoReflect.Descriptor instead.
func (*GetDHCPNodesRequest) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{0}
}

type GetDHCPNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *GetDHCPNodesResponse) Reset() {
	*x = GetDHCPNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDHCPNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDHCPNodesResponse) ProtoMessage() {}

func (x *GetDHCPNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDHCPNodesResponse.ProtoReflect.Descriptor instead.
func (*GetDHCPNodesResponse) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *GetDHCPNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ipv4         string   `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6         string   `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	VirtualIp    string   `protobuf:"bytes,4,opt,name=virtual_ip,json=virtualIp,proto3" json:"virtual_ip,omitempty"`
	ServiceAlive bool     `protobuf:"varint,5,opt,name=service_alive,json=serviceAlive,proto3" json:"service_alive,omitempty"`
	ServiceTags  []string `protobuf:"bytes,6,rep,name=service_tags,json=serviceTags,proto3" json:"service_tags,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *Node) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

func (x *Node) GetVirtualIp() string {
	if x != nil {
		return x.VirtualIp
	}
	return ""
}

func (x *Node) GetServiceAlive() bool {
	if x != nil {
		return x.ServiceAlive
	}
	return false
}

func (x *Node) GetServiceTags() []string {
	if x != nil {
		return x.ServiceTags
	}
	return nil
}

type HaTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command  HaCommand `protobuf:"varint,1,opt,name=command,proto3,enum=HaCommand" json:"command,omitempty"`
	MasterIp string    `protobuf:"bytes,2,opt,name=master_ip,json=masterIp,proto3" json:"master_ip,omitempty"`
	SlaveIp  string    `protobuf:"bytes,3,opt,name=slave_ip,json=slaveIp,proto3" json:"slave_ip,omitempty"`
}

func (x *HaTrigger) Reset() {
	*x = HaTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaTrigger) ProtoMessage() {}

func (x *HaTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaTrigger.ProtoReflect.Descriptor instead.
func (*HaTrigger) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *HaTrigger) GetCommand() HaCommand {
	if x != nil {
		return x.Command
	}
	return HaCommand_start_ha
}

func (x *HaTrigger) GetMasterIp() string {
	if x != nil {
		return x.MasterIp
	}
	return ""
}

func (x *HaTrigger) GetSlaveIp() string {
	if x != nil {
		return x.SlaveIp
	}
	return ""
}

var File_monitor_proto protoreflect.FileDescriptor

var file_monitor_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x48, 0x43, 0x50, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x48, 0x43,
	0x50, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x04,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x70, 0x76, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x70, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x61, 0x67, 0x73, 0x22, 0x69, 0x0a, 0x09, 0x48, 0x61, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x48, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x49, 0x70, 0x2a, 0x39, 0x0a, 0x09, 0x48, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x0c, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x61, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x10, 0x02, 0x32, 0x4f, 0x0a,
	0x0e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x48, 0x43, 0x50, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x14, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x48, 0x43, 0x50, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x48, 0x43, 0x50, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x03,
	0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_monitor_proto_rawDescOnce sync.Once
	file_monitor_proto_rawDescData = file_monitor_proto_rawDesc
)

func file_monitor_proto_rawDescGZIP() []byte {
	file_monitor_proto_rawDescOnce.Do(func() {
		file_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(file_monitor_proto_rawDescData)
	})
	return file_monitor_proto_rawDescData
}

var file_monitor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_monitor_proto_goTypes = []interface{}{
	(HaCommand)(0),               // 0: HaCommand
	(*GetDHCPNodesRequest)(nil),  // 1: GetDHCPNodesRequest
	(*GetDHCPNodesResponse)(nil), // 2: GetDHCPNodesResponse
	(*Node)(nil),                 // 3: Node
	(*HaTrigger)(nil),            // 4: HaTrigger
}
var file_monitor_proto_depIdxs = []int32{
	3, // 0: GetDHCPNodesResponse.nodes:type_name -> Node
	0, // 1: HaTrigger.command:type_name -> HaCommand
	1, // 2: MonitorService.GetDHCPNodes:input_type -> GetDHCPNodesRequest
	2, // 3: MonitorService.GetDHCPNodes:output_type -> GetDHCPNodesResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_monitor_proto_init() }
func file_monitor_proto_init() {
	if File_monitor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_monitor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDHCPNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDHCPNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_monitor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitor_proto_goTypes,
		DependencyIndexes: file_monitor_proto_depIdxs,
		EnumInfos:         file_monitor_proto_enumTypes,
		MessageInfos:      file_monitor_proto_msgTypes,
	}.Build()
	File_monitor_proto = out.File
	file_monitor_proto_rawDesc = nil
	file_monitor_proto_goTypes = nil
	file_monitor_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MonitorServiceClient is the client API for MonitorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitorServiceClient interface {
	GetDHCPNodes(ctx context.Context, in *GetDHCPNodesRequest, opts ...grpc.CallOption) (*GetDHCPNodesResponse, error)
}

type monitorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMonitorServiceClient(cc grpc.ClientConnInterface) MonitorServiceClient {
	return &monitorServiceClient{cc}
}

func (c *monitorServiceClient) GetDHCPNodes(ctx context.Context, in *GetDHCPNodesRequest, opts ...grpc.CallOption) (*GetDHCPNodesResponse, error) {
	out := new(GetDHCPNodesResponse)
	err := c.cc.Invoke(ctx, "/MonitorService/GetDHCPNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitorServiceServer is the server API for MonitorService service.
type MonitorServiceServer interface {
	GetDHCPNodes(context.Context, *GetDHCPNodesRequest) (*GetDHCPNodesResponse, error)
}

// UnimplementedMonitorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMonitorServiceServer struct {
}

func (*UnimplementedMonitorServiceServer) GetDHCPNodes(context.Context, *GetDHCPNodesRequest) (*GetDHCPNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDHCPNodes not implemented")
}

func RegisterMonitorServiceServer(s *grpc.Server, srv MonitorServiceServer) {
	s.RegisterService(&_MonitorService_serviceDesc, srv)
}

func _MonitorService_GetDHCPNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDHCPNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitorServiceServer).GetDHCPNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MonitorService/GetDHCPNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitorServiceServer).GetDHCPNodes(ctx, req.(*GetDHCPNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MonitorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MonitorService",
	HandlerType: (*MonitorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDHCPNodes",
			Handler:    _MonitorService_GetDHCPNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "monitor.proto",
}
